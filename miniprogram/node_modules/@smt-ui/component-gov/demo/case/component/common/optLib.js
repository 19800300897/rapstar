/**
 * @file optLib.js
 * @author LipengJia <jialipeng@baidu.com>
 * @date 2019-12-25
 */

 /**
 * 异步延迟函数
 *
 * @param {number} time 延迟时间长度
 */
const delay = (ms = 0) => new Promise(r => setTimeout(r, ms));

/**
 * hex 转rgb
 *
 * @param {string} hex 色值
 */
const hex2rgb = hex => {
    if (!hex || hex.length < 3) {
        throw new Error('hex2rgb: 请输入正确的颜色值');
    }
    let color = hex.charAt(0) !== '#' ? hex : hex.slice(1);
    let r = '';
    let alpha = '';
    let len = color.length;
    if (len > 6) {
        alpha = color.slice(6);
        color = color.substr(0, 6);
        len = 6;
    }
    for (const [idx, char] of [...color].entries()) {
        if (len === 3) {
            r += parseInt(`0x${char}${char}`, 16) + (idx < len - 1 ? ', ' : '');
            continue;
        }
        else if (idx % 2 === 0) {
            r += parseInt(`0x${color.substr(idx, 2)}`, 16) + (idx < len - 2 ? ', ' : '');
        }
    }
    r = alpha ? `rgba(${r}, ${alpha / 100})` : `rgb(${r})`;
    return r;
};

 /**
  * 获取页面数据
  *
  * @param {Object} driver smartium实例
  */
const getPageData = async driver => {
    let historyCommand = 'getCurrentPages().length';
    let currentPageIndex = (await driver.smartapp.cts.master({path: historyCommand}) - 1);
    let command = `getCurrentPages().${currentPageIndex}.data`;
    let pageData = await driver.smartapp.cts.master({path: command});
    return pageData || {};
};

/**
 * 获取页面数据
 *
 * @param {Object} driver smartium实例
 */
const getAssertData = async driver => {
    let pageData;
    let getDataReady = true;
    // 获取pageData前，每200ms做一次轮训，轮训50次
    for (let i = 0; i < 50; i++) {
        pageData = await getPageData(driver);
        Object.keys(pageData.assertResult || {}).forEach(subElm => {
            if (!pageData.assertResult[subElm].event) {
                getDataReady = false;
            }
        });
        if (getDataReady) {
            return pageData.assertResult;
        }
        await delay(200);
        getDataReady = true;
    }
    return pageData.assertResult || {};
};


module.exports = {
    getAssertData,
    getPageData,
    hex2rgb,
    delay
};
