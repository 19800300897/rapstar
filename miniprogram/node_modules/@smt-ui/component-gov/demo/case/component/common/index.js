/**
 * @file 公共方法
 * @author swan
 * @date 2019-12-19
 */

const {preset, setting, use} = require('../../../config.json');
const coverage = require('./coverage');
const {appKey, platform, saveCov} = {...preset, ...setting[use]};
const TIMEOUT = 2000; // 参考cts

/**
 * 保存行覆盖率
 *
 * @param {Object} driver smartium实例
 */
const saveCoverage = async driver => {
    let slaveCoverage;
    let cov = false;
    // 收集master行覆盖率
    try {
        cov = await driver.smartapp.cts.master({
            path: 'masterManager.context.__coverage__'
        }, TIMEOUT);
        console.log('master 结果是', cov);
        await coverage.saveCoverage(cov);
    }
    catch (e) {
        throw '收集master行覆盖率: ' + e;
    }

    // 收集slave行覆盖率
    if (saveCov && cov) {
        slaveCoverage = await driver.smartapp.page.cov();
        console.log('slave 结果是', slaveCoverage);
        await coverage.saveCoverage(slaveCoverage);
    }
};

/**
 * 预处理
 * @param {Object} driver smartium实例
 * @param {string} url 要跳转的路径
 */
const driverBefore = async (driver, url) => {
    await driver.init(platform, appKey, 'baiduboxapp');
    await driver.navigate.navigateTo(url);
};

module.exports = {
    driverBefore,
    saveCoverage
};
