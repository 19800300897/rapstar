import {
    COLOR_TIPS_RED,
    COLOR_GRAY_4,
    COLOR_RED_LIGHT,
    COLOR_WHITE
} from '../../common/style/color';
import {isIos} from '../../common/utils/index';

Component({
    externalClasses: [
        'gov-radio'
    ],
    properties: {
        value: {
            type: Boolean,
            value: false,
            observer(n) {
                this.updateIcon();
            }
        },
        inline: {
            type: Boolean,
            value: false
        },
        disabled: {
            type: Boolean,
            value: false,
            observer(n) {
                this.updateIcon();
            }
        },
        border: {
            type: Boolean,
            value: false
        },
        itemStyle: {
            type: String,
            value: ''
        },
        cancelable: {
            type: Boolean,
            value: false
        },
        desc: {
            type: String,
            value: ''
        },
        textStyle: {
            type: String,
            value: ''
        },
        tick: {
            type: Boolean,
            value: false
        },
        inFilter: {
            type: Boolean,
            value: false
        },
        activeColor: {
            type: String,
            value: COLOR_TIPS_RED
        },
        activeBgColor: {
            type: String,
            value: COLOR_RED_LIGHT
        }
    },
    data: {
        iconSize: '39.855rpx',
        iconSizeFilter: '30.193rpx',
        tickIconSize: '59.783rpx',
        iconsty: {name: '', color: ''},
        isIos
    },
    created() {
        this.updateIcon();
    },
    methods: {
        clkHdl() {
            let {disabled, value, cancelable} = this.data;
            const isBreak = this.disabled || !this.cancelable && value;

            this.triggerEvent('click', {
                disabled,
                value: isBreak ? value : !value,
                cancelable
            });

            if (isBreak) {
                return;
            }

            const checked = !value;
            this.triggerEvent('change', checked);
        },
        updateIcon() {
            let {
                value,
                disabled,
                inFilter,
                tick,
                activeColor,
                activeBgColor
            } = this.data;

            if (tick) {
                return;
            }

            let icon = {
                name: '',
                color: ''
            };

            // 禁用
            if (disabled) {
                icon.name = 'radio-forbid';
                icon.color = ['#f1f1f1', COLOR_GRAY_4];
            }
            // 非选中
            else if (!value) {
                icon.name = 'radio-uncheck';
                icon.color = COLOR_GRAY_4;
            }
            else {
                icon.name = inFilter ? 'checked-s' : 'radio-checked';
                icon.color = inFilter ? [activeColor, COLOR_WHITE] : activeColor;
            }

            this.setData({
                iconsty: icon,
                textStyle: {
                    ...this.data.textStyle,
                    'background-color': value && inFilter ? activeBgColor : ''
                }
            });
        }
    }
});
