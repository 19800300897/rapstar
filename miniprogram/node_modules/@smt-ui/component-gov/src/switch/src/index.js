/**
 * @file 自定义开关组件
 * @author swan
 */
const prefixCls = 'baidu-switch';

Component({
    behaviors: ['swan://form-field'],
    externalClasses: [
        'gov-inner-class',
        'gov-before-class',
        'gov-after-class'
    ],

    properties: {

        value: {
            type: [String, Number, Boolean],
            value: false,
            observer(newVal, oldVal) {
                this.computedValue();
                this.computedWrapClasses();
            }
        },

        trueValue: {
            type: [String, Number, Boolean],
            value: true,
            observer(newVal, oldVal) {
                this.computedWrapClasses();
            }
        },

        falseValue: {
            type: [String, Number, Boolean],
            value: false,
            observer(newVal, oldVal) {
                this.computedWrapClasses();
            }
        },

        disabled: {
            type: Boolean,
            value: false,
            observer(newVal, oldVal) {
                this.computedWrapClasses();
            }
        },

        loading: {
            type: Boolean,
            value: false,
            observer(newVal, oldVal) {
                this.computedWrapClasses();
            }
        },

        activeColor: {
            type: String,
            value: '',
            observer() {

            }
        },

        inactiveColor: {
            type: String,
            value: '',
            observer() {}
        }
    },

    data: {
        currentValue: false,
        innerClasses: `${prefixCls}-inner`,
        wrapClasses: []
    },

    lifetimes: {
        attached: function () {
           // 计算switch的value
            this.computedValue();
           // 计算样式
            this.computedWrapClasses();
        }
    },

    methods: {
        toggle() {
            if (this.data.disabled || this.data.loading) {
                return false;
            }
            const checked = this.data.currentValue === this.data.trueValue
            ? this.data.falseValue : this.data.trueValue;
            this.setData({
                currentValue: checked
            });
            // 改变样式
            this.computedWrapClasses();
            this.triggerEvent('change', checked);
        },
        computedValue() {
            this.setData({
                currentValue: this.data.value
            });
        },
        computedWrapClasses() {
            let wrapClasses = [`${prefixCls}`];

            if (this.data.currentValue === this.data.trueValue) {
                wrapClasses.push(`${prefixCls}-checked`);
            }
            if (!!this.data.disabled) {
                wrapClasses.push(`${prefixCls}-disabled`);
            }
            if (!!this.data.loading) {
                wrapClasses.push(`${prefixCls}-loading`);
            }
            wrapClasses = wrapClasses.join(' ');
            this.setData({
                wrapClasses
            });
        }
    }
});
