
/**
 * @file 时间轴子项
 * @author swan
 */
/* global Page, swan, getApp */
import {COLOR_BLUE, COLOR_RED} from '../../common/style/color';

// 默认各状态样式（icon和icon对应颜色）
const defaultStatusStyle = {
    finished: {
        icon: 'complete-o',
        iconColor: COLOR_BLUE
    },
    wait: {
        icon: 'time',
        iconColor: COLOR_BLUE
    },
    success: {
        icon: 'complete',
        iconColor: COLOR_BLUE
    },
    error: {
        icon: 'error',
        iconColor: COLOR_RED
    }
};
/* eslint-disable fecs-camelcase */
Component({
/* eslint-enable */
    externalClasses: [
        'gov-item-tail',
        'gov-content-title',
        'gov-content-slot'
    ],
    properties: {
        status: { // 步骤的状态，可选 wait/finished/success/error
            type: String,
            value: 'wait'
        },
        title: {
            type: String,
            value: ''
        },
        desc: {
            type: String,
            value: ''
        },
        descStyle: {
            type: String,
            value: ''
        },
        icon: {
            type: String,
            value: ''
        },
        iconColor: {
            type: String,
            value: ''
        }
    },
    data: {
        timeStatus: '',
        timeHasTail: false,
        timeIcon: '',
        timeIconColor: ''
    },
    methods: {
        initData() {
            let {
                status,
                icon,
                iconColor,
                hasTail
            } = this.data;
            let timeStatus = /finished|wait|success|error/.test(status) ? status : 'wait';
            let timeIcon = icon || defaultStatusStyle[timeStatus].icon;
            let timeIconColor = iconColor || defaultStatusStyle[timeStatus].iconColor;
            /**
            * 自定义有/无过程线 或 默认
            * 默认：finished、wait为未结束（有过程线）, success、error为流程结束（无过程线）
            */
            let timeHasTail = typeof hasTail === 'undefined'
                    ? /finished|wait/.test(timeStatus)
                    : hasTail;

            this.setData({
                timeStatus,
                timeIcon,
                timeIconColor,
                timeHasTail
            });
        }
    },
    created() {
        this.initData();
    }
});
