/**
 * @file index.js
 * @author swan
 * @date 2020-02-27
 */

Component({
    externalClasses: [
        'gov-upload-box',
        'gov-img',
        'gov-delete',
        'gov-tips',
        'gov-upload-inline-box',
        'gov-upload-word',
        'gov-inline-img',
        'gov-inline-delete'
    ],

    properties: {
        imageList: {
            type: Array,
            value: []
        },
        count: {
            type: Number,
            value: 6
        },
        tips: {
            type: String,
            value: ''
        },
        border: {
            type: Boolean,
            value: false
        },
        sizeType: {
            type: Array,
            value: ['compressed']
        },
        sourceType: {
            type: Array,
            value: ['album', 'camera']
        },
        imgMode: {
            type: String,
            value: 'aspectFill'
        },
        inline: {
            type: Boolean,
            value: false
        },
        url: {
            type: String,
            value: ''
        },
        name: {
            type: String,
            value: 'file'
        },
        header: {
            type: Object,
            value: {
                'content-type': 'application/json'
            }
        },
        formData: {
            type: Object,
            value: {
                'user': 'swan'
            }
        },
        limitSize: {
            type: Number
        },
        showSizeToast: {
            type: Boolean,
            value: false
        }
    },

    /**
     * 点击上传图片
     */
    clickUp() {
        let {imageList, count, sizeType, sourceType, inline, url, limitSize, showSizeToast} = this.data;
        let urlType = typeof url === 'string';
        swan.chooseImage({
            count: inline ? 1 : count - imageList.length,
            sizeType,
            sourceType,
            success: res => {
                for (let i = 0; i < res.tempFiles.length; i++) {
                    if (limitSize) {
                        if (res.tempFiles[i].size < limitSize * 1024 * 1024) {
                            imageList.push(...res.tempFiles);
                            if (!url || !urlType) {
                                return this.triggerEvent('urlempty', imageList);
                            }
                            this.upLoad(res, i);
                        }
                        else {
                            if (!showSizeToast) {
                                swan.showToast({
                                    title: `请上传大小${limitSize}M以内的图片`,
                                    icon: 'none'
                                });
                            }
                            this.triggerEvent('limitsizeerr');
                            return;
                        }
                    }
                    else {
                        if (!url || !urlType) {
                            return this.triggerEvent('noturl', imageList);
                        }
                        this.upLoad(res, i);
                    }
                }
            },
            fail: err => {
                this.triggerEvent('chooserr', err);
            }
        });
    },
    /**
     * 上传图片
     *
     * @param {Object} res 选择图片的返回
     * @param {Number} i 图片张数的循环
     */
    upLoad(res, i) {
        let {header, formData, name, url} = this.data;
        swan.showLoading({title: '上传中', mask: true});
        swan.uploadFile({
            url,
            filePath: res.tempFiles[i].path, // 要上传文件资源的路径
            name,
            header,
            formData,
            success: res => {
                if (res.statusCode === 200) {
                    swan.hideLoading();
                    this.triggerEvent('uploadsuccess', {res: res.data});
                }
                else {
                    swan.hideLoading();
                    return this.triggerEvent('reserror', {res: res.data});
                }
            },
            fail: err => {
                swan.hideLoading();
                this.triggerEvent('uploadfail', err);
            }
        });
    },
    /**
     * 预览图片
     */
    previewImage(e) {
        let index = e.currentTarget.dataset.index;
        swan.previewImage({
            current: this.data.imageList[index],
            urls: this.data.imageList,
            success: res => {
                this.triggerEvent('previewsuccess', res);
            },
            fail: err => {
                this.triggerEvent('previewfail', err);
            }
        });
    },
    /**
     * 点击删除图片
     */
    clickDelete(e) {
        let index = e.currentTarget.dataset.index;
        this.data.imageList.splice(index, 1);
        this.triggerEvent('delete', {
            path: this.data.imageList,
            index: index
        });
    }
});
