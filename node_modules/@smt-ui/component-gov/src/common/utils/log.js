/**
 * @file 日志
 *
 * @author caiyouliang
 */
import {ubcLogger} from '@baidu/ug-swan-logger';
/* global swan, getApp, getCurrentPages */
/**
 * ubc日志上报
 *
 * @param {Object} params 日志参数，参数文档 http://agroup.baidu.com/China/view/office/2038417
 */
const ubcReporter = params => {
    let {actionId, type, page, value, source, ext} = params;
    let outer = {
        from: 'swan',
        type,
        page,
        value
    };
    if (source) {
        value.source = source;
    }
    let data = {
        actionId,
        /* eslint-disable fecs-camelcase */
        'min_v': '16789504',
        /* eslint-enable fecs-camelcase */
        value: outer
    };
    if (ext) {
        data.ext = ext;
    }
    console.log('ubcReporter', data);
    swan.ubcReporter && swan.ubcReporter(data);
};

// 线上域名，上线前记得改回这个域名
export const LOG_API_DOMAIN = 'https://mbd.baidu.com';
// 线下域名，线下开发、走查、测试用这个环境
// export const LOG_API_DOMAIN = 'http://bjyz-mco-searchbox201609-m12xi3-044.bjyz.baidu.com:8080';

/**
 * 打点方式改为用serverid打点
 *
 * @param {object} params 打点内容
 * @date 20191120
 */
export function sendLog(params) {
    let timestamp = new Date().getTime();
    let defaultParams = {
        cateid: 99,
        actiondata: {
            timestamp: timestamp,
            id: '10503',
            type: '0',
            content: {
                from: 'swan',
                type: 'show'
            }
        }
    };
    Object.assign(defaultParams.actiondata.content, params);
    /* eslint-disable no-undef */
    swan.request(
        /* eslint-enable no-undef */
        {
            url: `${LOG_API_DOMAIN}/ztbox`,
            data: {
                data: JSON.stringify(defaultParams)
            },
            method: 'GET'
        }
    );
}

/**
 * 新的打点方式ubclogger 打点
 *
 * @param {Object} params 初始化参数
 * @return {Object} 初始化后的ubclogger实例
 */
function initUbcLogger(params = {}) {
    const defaultParams = {
        version: '2.0',
        idfrom: getApp().globalData.from || 'default',
        from: 'swan'
    };
    ubcLogger.set(Object.assign({}, defaultParams, params));
    return ubcLogger;
}

module.exports = {
    ubcReporter,
    /**
     * 获取reporter
     *
     * @param {Object} fix 统计一阶参数，相对固定的有actionId, page, source三项
     * @return {function} ubcReporter 低阶上报函数
     */
    getReporter(fix) {
        let {actionId, page, source} = fix;
        return params => ubcReporter({
            ...params,
            actionId,
            page,
            source
        });
    },
    sendLog,
    initUbcLogger
};
