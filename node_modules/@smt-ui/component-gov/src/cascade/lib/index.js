"use strict";

var _color = require("../../common/style/color");

var _index = require("../../common/utils/index");

/**
 * @file index.js
 * @author swan
 * @date 2020-02-21
 */

/* global swan */
Component({
  // eslint-disable-line
  externalClasses: ['gov-picker', 'gov-lable', 'gov-content', 'gov-picker-content'],
  properties: {
    range: {
      type: Array,
      value: [],
      observer: function observer(newVal) {
        this.initValue();
      }
    },
    // 左侧文字
    label: {
      type: String,
      value: '68px'
    },
    // 左侧文字宽度
    labelWidth: {
      type: String,
      value: '74px'
    },
    placeholder: {
      type: Array,
      value: []
    },
    value: {
      type: Array,
      value: [],
      observer: function observer(newVal) {
        this.initValue(newVal);
      }
    },
    rangeKey: {
      type: String,
      value: ''
    },
    disabled: {
      type: Boolean,
      value: false
    },
    tips: {
      type: Array,
      value: []
    },
    errStatus: {
      type: Boolean,
      value: false
    },
    errColor: {
      type: String,
      value: _color.COLOR_RED
    },
    noborder: {
      type: Boolean,
      value: false
    }
  },
  data: {
    value: '',
    content: [],
    newValue: '',
    isIos: _index.isIos
  },
  methods: {
    /**
     * 获取picker选中的内容
     *
     * @param {Array} newValue picker选中是的下标
     */
    initValue: function initValue(newValue) {
      var _this = this;

      var _this$data = this.data,
          range = _this$data.range,
          rangeKey = _this$data.rangeKey;
      var options = [];

      if (newValue) {
        range.forEach(function (item, index) {
          if (range[index][newValue[index]]) {
            options.push(range[index][newValue[index]][rangeKey]);

            _this.setData('content', options);
          }
        });
      }
    },

    /**
     * picker选中的事件
     */
    selectorChange: function selectorChange(e) {
      var index = e.target.dataset.index;
      var options = e.target.dataset.range;
      var currentValue = e.detail.value;
      var value = this.data.value;

      if (value[index] === currentValue || !options || options && options.length === 0) {
        return;
      }

      value[index] = currentValue;
      var newValue = value.slice(0, index + 1);
      this.setData('value', newValue);
      this.initValue(newValue);
      this.triggerEvent('change', {
        value: newValue
      });
    },

    /**
     * 点击picker上面未选弹框
     */
    tap: function tap(e) {
      var index = e.currentTarget.dataset.index;

      if (index !== this.data.value.length && !this.data.disabled && !this.data.content[2] && !this.data.content[index]) {
        swan.showToast({
          title: this.data.tips[this.data.value.length],
          icon: 'none'
        });
      }
    }
  }
});