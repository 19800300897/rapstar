{
    "name": "gov-cascade",
    "label": "cascade",
    "description": "cascade",
    "codeSnap": "<gov-cascade range='{{multiArray}}' label='地区地区' value='{{[]}}' rangeKey='name' labelWidth='68px' bind:change='change' placeholder='{{['请选择省', '请选择市', '请选择区']}}'/>",
    "groups": "layout",
    "demoCode": {
        "s": "<gov-cascade range='{{multiArray}}' label='四字折行折行' value='{{[]}}' rangeKey='name' labelWidth='4em' tips='{{['请选择省', '请选择市', '请选择区']}}' bind:change='change' placeholder='{{['请选择省', '请选择市', '请选择区']}}'/>   <gov-cascade range='{{multiArray}}' label='无下边框线' noborder='{{true}}' value='{{[]}}' rangeKey='name' labelWidth='6em' tips='{{['请选择省', '请选择市', '请选择区']}}' bind:change='change' placeholder='{{['请选择省', '请选择市', '请选择区']}}' />    <gov-cascade range='{{multiArray}}'label='六字折行折行六字' value='{{[]}}' rangeKey='name' labelWidth='6em' tips='{{['请选择省', '请选择市', '请选择区']}}' bind:change='change' placeholder='{{['请选择省', '请选择市', '请选择区']}}' /> <gov-cascade range='{{multiArray}}' label='提示型' value='{{[]}}' rangeKey='name' labelWidth='4em' tips='{{['请选择省', '请选择市', '请选择区']}}' bind:change='change' placeholder='{{['请选择省', '请选择市', '请选择区']}}' /> <gov-cascade range='{{multiArray}}' label='禁用型' value='{{[]}}' rangeKey='name' labelWidth='4em' disabled bind:change='change' placeholder='{{['请选择省', '请选择市', '请选择区']}}' />      <gov-cascade range='{{array}}' label='回填' value='{{[1, 2, 1]}}' rangeKey='name' labelWidth='4em' tips='{{['请选择省', '请选择市', '请选择区']}}' bind:change='change' placeholder='{{['请选择省', '请选择市', '请选择区']}}' />        <gov-cascade range='{{multiArray}}' label='label飘红' value='{{[]}}' errStatus='{{true}}' rangeKey='name' labelWidth='4em' tips='{{['请选择省', '请选择市', '请选择区']}}' bind:change='change' placeholder='{{['请选择省', '请选择市', '请选择区']}}' />        <gov-cascade range='{{multiArray}}' label='externalClass' value='{{[]}}' gov-lable='gov-lable' errStatus='{{true}}' rangeKey='name' labelWidth='4em' tips='{{['请选择省', '请选择市', '请选择区']}}' bind:change='change' placeholder='{{['请选择省', '请选择市', '请选择区']}}' />",
        "js":" Page({ data: { multiArray: [[], [], []], array: [[{ name: '太原市', value: 1 }, { name: '大同市', value: 2 }, { name: '吕梁市', value: 3 }], [{ name: '太原市', value: 1 }, { name: '大同市', value: 2 }, { name: '吕梁市', value: 3 }], [{ name: '太原市', value: 1 }, { name: '大同市', value: 2 }, { name: '吕梁市', value: 3 }]] }, change({detail}) { if (detail.value.length === 1) { let array = []; swan.showLoading({ title: '正在加载...', mask: true }); setTimeout(() => { switch (detail.value[0]) { case 0: array = [{ name: '北京市', value: 1 }]; break; case 1: array = [{ name: '太原市', value: 1 }, { name: '大同市', value: 2 }, { name: '吕梁市', value: 3 }]; break; case 2: array = [{ name: '哈尔滨市', value: 1 }, { name: '齐齐哈尔市',value: 2}, {name: '大庆市',value: 3}];break;default:break;}swan.hideLoading();this.data.multiArray[1] = array;this.setData('multiArray', this.data.multiArray);}, 500);}else if (detail.value.length === 2) {let area = [];swan.showLoading({title: '正在加载...',mask: true});setTimeout(() => {if (detail.value[0] === 0 && detail.value[1] === 0) {area = [{name: '海淀区',value: 1}, {name: '大兴区',value: 2}, {name: '朝阳区',value: 3}];}else if (detail.value[0] === 1) {if (detail.value[1] === 0) {area = [{name: '小店区',value: 1}, {name: '迎泽区',value: 2}, {name: '杏花岭区',value: 3}];}else if (detail.value[1] === 1) {area = [{name: '南郊区',value: 1}, {name: '新荣区',value: 2}, {name: '阳高区',value: 3}];}else if (detail.value[1] === 2) {area = [{name: 孝义市',value: 1}, {name: '离石市',value: 2}, {name: '汾阳市',value: 3}];}}else if (detail.value[0] === 2) {if (detail.value[1] === 0) {area = [{name: '道里区',value: 1}, {name: '南岗区',value: 2}, {name: '太平区',value: 3}];}else if (detail.value[1] === 1) {area = [{name: '龙沙区',value: 1}, {name: '建华区',value: 2}, {name: '铁锋区',value: 3}];}else if (detail.value[1] === 2) {area = [{name: '龙凤区',value: 1}, {name: '红岗区',value: 2}, {name: '林甸县',value: 3}];}}swan.hideLoading();this.data.multiArray[2] = area;this.setData('multiArray', this.data.multiArray);}, 500);}},onLoad() {let arr = [{name: '北京市',value: 1},{name: '山西省',value: 2}{name: '黑龙江省',value: }];this.data.multiArray[0] = arr;this.setData('multiArray', this.data.multiArray);}});",
        "css": " .gov-lable { color: #6495ed !important; }.gov-picker-content { color: #6495ed; }"
    },
    "fragement": "",
    "properties": {
        "attributes": [
            {
                "name": "range",
                "type": "Array",
                "description": "pikcer内容 二维数组必传 [[], [], []]",
                "required": "否",
                "default": ""
            },
            {
                "name": "labelWidth",
                "type": "String",
                "description": "左侧文字宽度，须包含单位，例如em、px、rpx、vw、vh... 默认为4字宽度4em，6字宽度6em, 建议用em，可以适配",
                "required": "否",
                "default": "6em"
            },
            {
                "name": "label",
                "type": "String",
                "description": "左侧文字描述",
                "required": "否",
                "default": ""
            },
            {
                "name": "placeholder",
                "type": "String",
                "description": "picker没值默认显示",
                "required": "否",
                "default": ""
            },
            {
                "name": "value",
                "type": "Array",
                "description": "picker选中时的下标",
                "required": "否",
                "default": ""
            },
            {
                "name": "rangeKey",
                "type": "String",
                "description": "指定 Object 中 key 的值作为选择器显示内容",
                "required": "否",
                "default": ""
            },
            {
                "name": "errColor",
                "type": "String",
                "description": "picker label颜色",
                "required": "否",
                "default": "#BD1A2D"
            },
            {
                "name": "errStatus",
                "type": "Boolean",
                "description": "picker label是否飘红",
                "required": "否",
                "default": "false"
            },
            {
                "name": "disabled",
                "type": "Boolean",
                "description": "联动是否为禁用型显示",
                "required": "否",
                "default": "false"
            },
            {
                "name": "tips",
                "type": "Array",
                "description": "前面未选提示的内容",
                "required": "否",
                "default": ""
            },
            {
                "name": "noborder",
                "type": "Boolean",
                "description": "联动picker是否有下边框线",
                "required": "否",
                "default": "false"
            }
        ],
        "events": [
            {
                "name": "change",
                "type": "Event",
                "description": "picker改变时触发",
                "required": "否",
                "default": "-"
            }
        ],
        "externalClasses": [
            {
                "name": "gov-picker",
                "type": "",
                "description": "组件整体的扩展样式，可通过此class改变组件整体的样式",
                "required": "否",
                "default": "-"
            },
            {
                "name": "gov-lable",
                "type": "",
                "description": "picker label扩展样式类，可通过此class改变label的样式",
                "required": "否",
                "default": "-"
            },
            {
                "name": "gov-content",
                "type": "",
                "description": "picker整体扩展样式类，可通过此picker整体的样式",
                "required": "否",
                "default": "-"
            },
            {
                "name": "gov-picker-content",
                "type": "",
                "description": "picker的样式类，可通过此picker的样式",
                "required": "否",
                "default": "-"
            }
        ]
    }
}