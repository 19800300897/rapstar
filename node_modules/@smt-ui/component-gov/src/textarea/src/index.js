/**
 * @file 多行输入框
 * @author swan
 */
/* globals Page, swan, getApp */
import {COLOR_RED} from '../../common/style/color';

Component({
    externalClasses: [
        'gov-textarea-title',
        'gov-textarea-wrap',
        'gov-textarea-element',
        'gov-notice-icon'
    ],
    properties: {
        // 头部标题
        head: {
            type: String,
            value: ''
        },
        hasBorder: {
            type: Boolean,
            value: false
        },
        // 左侧标题
        title: {
            type: String,
            value: ''
        },
        // 当前状态 目前只有错误状态-error
        status: {
            type: String,
            value: ''
        },
        // 文本域后面的notic图标
        /*
            例如
            {
                // 是否显示notic图标
                visible: false,
                // 'toast'或'modal'
                type: 'toast',
                // toast 文案
                toastOptions: {
                    toastTitle: 'toast的一些个文案～',
                    // "success"、"loading"、"none"
                    toastIcon: 'none'
                },
                // modal 文案
                modalOptions: {
                    modalTitle: '标题',
                    modalContent: 'modal的一些个文案！'
                }
            }
        */
        noticeInfo: {
            type: Object,
            value: {}
        },
       // 文本域内容
        value: {
            type: String,
            value: ''
        },
        // 是否禁用
        disabled: {
            type: Boolean,
            value: false
        },
        // 最大值
        maxlength: {
            type: Number,
            value: 999
        },
        // 默认提示文字
        placeholder: {
            type: String,
            value: ''
        },
        // 指定光标与键盘的距离
        cursorSpacing: {
            type: Number,
            value: 6
        },
        // 键盘弹起时，是否自动上推页面
        adjustPosition: {
            type: Boolean,
            value: true
        },
        // 键盘上方是否显示”完成“按钮栏
        showConfirmBar: {
            type: Boolean,
            value: true
        },
        // 输入提示icon
        icon: {
            type: Object,
            value: {
                name: 'warning',
                color: COLOR_RED,
                size: '17.4px'
            }
        },
        // 是否展示提示icon
        showTip: {
            type: Boolean,
            value: false
        },
        exceedToast: {
            type: String,
            value: '最多输入42个字'
        },
        // 是否展示toast
        showExceedToast: {
            type: Boolean,
            value: false
        }
    },
    data: {
        status: '',
        value: '',
        focus: false,
        lentip: false,
        currentLenTip: {}
    },
    methods: {
        /**
         * 展示弹框或toast
         */
        showNotic() {
            let {type, modalOptions, toastOptions} = this.data.noticeInfo;
            if (type === 'modal') {
                swan.showModal({
                    title: modalOptions.modalTitle,
                    content: modalOptions.modalContent,
                    confirmText: '我知道了',
                    showCancel: false
                });
            }
            else {
                swan.showToast({
                    title: toastOptions.toastTitle,
                    icon: toastOptions.toastIcon
                });
            }
        },
        /**
         * 失焦事件
         */
        handleBlur({detail}) {
            this.setData({
                focus: false
            });
            this.triggerEvent('blur', detail);
        },
        /**
         * 输入事件
         */
        handleInput({detail}) {
            if (this.data.showExceedToast) {
                if (this.data.value.length === this.data.maxlength) {
                    swan.showToast({
                        title: this.data.exceedToast,
                        icon: 'none'
                    });
                }
            }
            this.setData({
                value: detail.value
            });
            const len = this.data.maxlength - detail.cursor;
            const words = Math.abs(len) > 999 ? '999+' : Math.abs(len);
            if (len <= 20) {
                this.setData({
                    lentip: true,
                    currentLenTip: {
                        exceed: len < 0,
                        text: (len < 0 ? '超' : '剩') + words + '字'
                    }
                });
            }
            else {
                this.setData({
                    lentip: false
                });
            }
            this.triggerEvent('input', detail);
        }
    }
});
