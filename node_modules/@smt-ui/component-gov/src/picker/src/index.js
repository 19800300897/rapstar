/**
 * @file index.js
 * @author swan
 * @date 2020-02-21
 */

 /* global swan */
import {COLOR_TIPS_RED} from '../../common/style/color';
import {isIos} from '../../common/utils/index';

Component({ // eslint-disable-line
    externalClasses: ['gov-picker', 'gov-lable', ' gov-content'],
    properties: {
        mode: {
            type: String,
            value: 'selector'
        },

        range: {
            type: Array
        },

        noborder: {
            type: Boolean,
            value: false
        },

        // 左侧文字
        label: {
            type: String,
            value: ''
        },

        // 左侧文字宽度
        labelWidth: {
            type: String,
            value: '4em'
        },

        placeholder: {
            type: String,
            value: ''
        },

        value: {
            type: String,
            value: '',
            observer(newVal) {
                this.setShowName(newVal);
            }
        },

        rangeKey: {
            type: String,
            value: ''
        },

        start: {
            type: String,
            value: ''
        },

        end: {
            type: String,
            value: ''
        },

        disabled: {
            type: Boolean,
            value: false
        },

        displayType: {
            type: Boolean,
            value: true
        },

        errStatus: {
            type: Boolean,
            value: false
        },

        errColor: {
            type: String,
            value: COLOR_TIPS_RED
        },

        locationName: {
            type: String,
            value: ''
        }
    },

    data: {
        arrIndex: '',
        content: '',
        isTips: false,
        isIos
    },

    methods: {
        /**
         * 获取picker选中的内容
         *
         * @param {Number} val picker选中是的下标
         */
        setShowName(val) {
            this.setData('arrIndex', val);
            let {mode, range, value, displayType, rangeKey} = this.data;
            if (mode === 'selector') {
                if (range[val]) {
                    this.setData('content', range[val][rangeKey]);
                }
            }
            else if (mode === 'time' || mode === 'date') {
                this.setData('content', val);
            }
            if (mode === 'region') {
                if (displayType) {
                    this.setData('content', val[0] + val[1] + val[2]);
                }
                else {
                    this.setData('content', val[2]);
                }
            }
            else if (mode === 'multiSelector') {
                if (range.length === 2 && value.length) {
                    let rangeContent = range[0][value[0]][rangeKey] + range[1][value[1]][rangeKey];
                    if (displayType) {
                        this.setData('content', rangeContent);
                    }
                    else {
                        this.setData('content', range[1][value[1]][rangeKey]);
                    }
                }
                else if (range.length === 3 && value.length) {
                    let multiContent = range[0][value[0]][rangeKey]
                    + range[1][value[1]][rangeKey]
                    + range[2][value[2]][rangeKey];
                    if (displayType) {
                        this.setData('content', multiContent);
                    }
                    else {
                        this.setData('content', range[2][value[2]][rangeKey]);
                    }
                }
            }
        },
        /**
         * 点击地址位置选择的事件
         */
        selectorClick() {
            if (this.data.mode === 'location' && !this.data.isTips) {
                this.setData('isTips', true);
                swan.authorize({
                    scope: 'scope.userLocation',
                    fail: () => {
                        swan.showToast({
                            title: '请开启地理位置权限后重试',
                            icon: 'none',
                            duration: 2000
                        });
                        swan.openSetting({});
                        setTimeout(() => this.setData('isTips', false), 1000);
                    }
                });
                swan.chooseLocation({
                    success: res => {
                        this.triggerEvent('choosesuccess', res);
                        setTimeout(() => this.setData('isTips', false), 1000);
                    },
                    fail: err => {
                        if (err.errCode === 10005) {
                            swan.showModal({
                                title: '提示',
                                content: '请在手机设置中开启百度APP的获取定位权限后重试',
                                showCancel: false,
                                confirmText: '我知道了'
                            });
                        };
                        this.triggerEvent('choosefail', err);
                        setTimeout(() => this.setData('isTips', false), 1000);
                    }
                });
            }
        },
        /**
         * picker选中的事件e
         */
        selectorChange(e) {
            const currentValue = e.detail.value;
            this.setShowName(currentValue);
            this.triggerEvent('change', e);
        },
        /**
         * picker类型未多列时候的内容实时改变的事件
         */
        bindMultiPickerColumnChange(e) {
            this.triggerEvent('columnchange', e);
        },
        /**
         * picker取消事件
         */
        cancel() {
            this.triggerEvent('cancel');
        }
    }
});
