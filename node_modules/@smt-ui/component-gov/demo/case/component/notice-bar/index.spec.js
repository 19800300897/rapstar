/**
 * @file mocha case for steps组件校验
 * @author congfengxiang
 */
/* globals before, after */
const expect = require('chai').expect;
const Driver = require('@baidu/smartium');
const {driverBefore} = require('../common/index');
const {COLOR_BLUE, COLOR_BLUE_LIGHT, COLOR_RED} = require('../common/color');
const rgbHex = require('rgb-hex');

describe('notice-bar 通知栏', function () {
    const driver = new Driver();

    before(driverBefore(driver, '/example/pages/notice-bar/index'));
    const idList = ['default', 'text', 'no-close', 'custom-color', 'costom-style'];

    it('通知栏能渲染', async () => {
        let result = [];
        for (const id of idList) {
            const r = await driver.element.isRender(
                driver.findElement.bySelector(`#${id} .gov-notice-bar__notice-bar`)
            );
            result.push(r);
        }
        expect(result.every(r => r)).to.equals(true);
    });

    it('可以自定义内容', async () => {
        const result = [];
        let text = '';
        // 默认话术： 通知栏:notice-bar
        const elDefault = driver.findElement.byId('default');
        text = await driver.element.getInnerText(elDefault);
        result.push(text === '通知栏:notice-bar');

        // text="跑马灯默认配置：初始1秒开始；速度50px/s；iconName：close"
        const elText = driver.findElement.byId('text');
        text = await driver.element.getInnerText(elText);
        result.push(text === '跑马灯默认配置：初始1秒开始；速度50px/s；iconName：close');
        expect(result.every(r => r)).to.equals(true);
    });

    it('自定义样式是否正确', async () => {
        const color = [[COLOR_RED, '#fff'], [COLOR_BLUE_LIGHT, COLOR_BLUE]];
        const list = [...idList].slice(3);
        for (const [idx, id] of list.entries()) {
            console.log('sel: ', `#${id} .gov-notice-bar__notice-bar`);
            const elContainer = driver.findElement.bySelector(`#${id} .gov-notice-bar__notice-bar`);
            const elText = driver.findElement.bySelector(`#${id} .gov-notice-bar__text`);
            // const [b, c] = color[idx];
            // const bg = await driver.element.getBackgroundColor(elContainer);
            // const textColor = await driver.element.getAttribute(elText, 'color'); // cts 不支持 computedStyle
            // console.log('bg: ', bg, textColor, rgbHex(bg), rgbHex(textColor));
        }
    });

    it('可关闭', async () => {
        const list = [...idList];
        list.splice(2, 1);
        // 先点close
        const result = [];
        for (const id of list) {
            const el = driver.findElement.bySelector(`#${id} .gov-notice-bar__close-icon`);
            // 先点击
            await driver.element.click(el);
            // 检测是否已消失
            const r = await driver.element.isRender(el);
            result.push(r);
        }
        expect(result.every(r => !r)).to.equals(true);
    });

    after(async () => {
        if (driver) {
            const coverage = await driver.swan.masterCoverage();
            console.log('coverage: ', coverage);
            await driver.close();
        }
    });
});
